
# WARNING: this file is automatically generated by generate-config.js
# info on building Docker images on Circle
# https://circleci.com/docs/2.0/building-docker-images/
version: 2.1

buildFilters: &buildFilters
  filters:
    branches:
      only:
        - master
        - add-circle-build

jobs:
  build-base-image:
    machine: true
    parameters:
      dockerName:
        type: string
        description: Image name to build
        default: cypress/base
      dockerTag:
        type: string
        description: Image tag to build like "12.14.0"
    steps:
      - checkout
      - run:
          name: Check if image exists
          # using https://github.com/mishguruorg/docker-image-exists
          # to check if Docker hub has the image already
          command: |
            if npx docker-image-exists --quiet --repo << parameters.dockerName >>:<< parameters.dockerTag >>; then
              echo Found image << parameters.dockerName >>:<< parameters.dockerTag >>
              circleci-agent step halt
            else
              echo Did not find Docker image << parameters.dockerName >>:<< parameters.dockerTag >>
            fi
      - run:
          name: building Docker image << parameters.dockerName >>:<< parameters.dockerTag >>
          command: |
            docker build -t << parameters.dockerName >>:<< parameters.dockerTag >> .
          working_directory: base/<< parameters.dockerTag >>

      - run:
          name: test built image
          command: |
            docker build -t cypress/test -\<<EOF
            FROM << parameters.dockerName >>:<< parameters.dockerTag >>
            RUN echo "current user: $(whoami)"
            ENV CI=1
            RUN npm init --yes
            RUN npm install --save-dev cypress
            RUN ./node_modules/.bin/cypress verify
            RUN npx @bahmutov/cly init
            RUN ./node_modules/.bin/cypress run
            EOF

      - run:
          name: Check if can push to Docker Hub
          command: |
            if [[ "$CIRCLE_BRANCH" != "master" ]]; then
              echo "Not master branch, will skip pushing newly built Docker image"
              circleci-agent step halt
            else
              echo "On master branch, pushing Docker image to hub"
            fi

      - run:
          name: Pushing new image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push << parameters.dockerName >>:<< parameters.dockerTag >>

workflows:
  version: 2
  build-base-images:
    jobs:
      - build-base-image:
          name: "10"
          dockerTag: "10"
          <<: *buildFilters
      - build-base-image:
          name: "10.11.0"
          dockerTag: "10.11.0"
          <<: *buildFilters
      - build-base-image:
          name: "10.15.3"
          dockerTag: "10.15.3"
          <<: *buildFilters
      - build-base-image:
          name: "10.16.0"
          dockerTag: "10.16.0"
          <<: *buildFilters
      - build-base-image:
          name: "10.18.0"
          dockerTag: "10.18.0"
          <<: *buildFilters
      - build-base-image:
          name: "10.2.1"
          dockerTag: "10.2.1"
          <<: *buildFilters
      - build-base-image:
          name: "11.13.0"
          dockerTag: "11.13.0"
          <<: *buildFilters
      - build-base-image:
          name: "12.0.0"
          dockerTag: "12.0.0"
          <<: *buildFilters
      - build-base-image:
          name: "12.1.0"
          dockerTag: "12.1.0"
          <<: *buildFilters
      - build-base-image:
          name: "12.12.0"
          dockerTag: "12.12.0"
          <<: *buildFilters
      - build-base-image:
          name: "12.13.0"
          dockerTag: "12.13.0"
          <<: *buildFilters
      - build-base-image:
          name: "12.14.0"
          dockerTag: "12.14.0"
          <<: *buildFilters
      - build-base-image:
          name: "12.4.0"
          dockerTag: "12.4.0"
          <<: *buildFilters
      - build-base-image:
          name: "12.6.0"
          dockerTag: "12.6.0"
          <<: *buildFilters
      - build-base-image:
          name: "13.1.0"
          dockerTag: "13.1.0"
          <<: *buildFilters
      - build-base-image:
          name: "13.3.0"
          dockerTag: "13.3.0"
          <<: *buildFilters
      - build-base-image:
          name: "6"
          dockerTag: "6"
          <<: *buildFilters
      - build-base-image:
          name: "8"
          dockerTag: "8"
          <<: *buildFilters
      - build-base-image:
          name: "8.15.1"
          dockerTag: "8.15.1"
          <<: *buildFilters
      - build-base-image:
          name: "8.16.0"
          dockerTag: "8.16.0"
          <<: *buildFilters
      - build-base-image:
          name: "8.2.1"
          dockerTag: "8.2.1"
          <<: *buildFilters
      - build-base-image:
          name: "8.9.3"
          dockerTag: "8.9.3"
          <<: *buildFilters
      - build-base-image:
          name: "8.9.3-npm-6.10.1"
          dockerTag: "8.9.3-npm-6.10.1"
          <<: *buildFilters
      - build-base-image:
          name: "centos7"
          dockerTag: "centos7"
          <<: *buildFilters
      - build-base-image:
          name: "centos7-12.4.0"
          dockerTag: "centos7-12.4.0"
          <<: *buildFilters
      - build-base-image:
          name: "ubuntu16"
          dockerTag: "ubuntu16"
          <<: *buildFilters
      - build-base-image:
          name: "ubuntu16-12.13.1"
          dockerTag: "ubuntu16-12.13.1"
          <<: *buildFilters
      - build-base-image:
          name: "ubuntu16-8"
          dockerTag: "ubuntu16-8"
          <<: *buildFilters
