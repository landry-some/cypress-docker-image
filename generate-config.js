// this script generates CircleCI config file by looking at the "base/*" folders
// for each subfolder it creates a separate job
const globby = require('globby');
const fs = require('fs')
const path = require('path')

const preamble = `
# WARNING: this file is automatically generated by ${path.basename(__filename)}
# info on building Docker images on Circle
# https://circleci.com/docs/2.0/building-docker-images/
version: 2.1

buildFilters: &buildFilters
  filters:
    branches:
      only:
        - master
        - add-circle-build

jobs:
  build-base-image:
    machine: true
    parameters:
      dockerName:
        type: string
        description: Image name to build
        default: cypress/base
      dockerTag:
        type: string
        description: Image tag to build like "12.14.0"
    steps:
      - checkout
      - run:
          name: Check if image exists
          # using https://github.com/mishguruorg/docker-image-exists
          # to check if Docker hub has the image already
          command: |
            if npx docker-image-exists --quiet --repo << parameters.dockerName >>:<< parameters.dockerTag >>; then
              echo Found image << parameters.dockerName >>:<< parameters.dockerTag >>
              circleci-agent step halt
            else
              echo Did not find Docker image << parameters.dockerName >>:<< parameters.dockerTag >>
            fi
      - run:
          name: building Docker image << parameters.dockerName >>:<< parameters.dockerTag >>
          command: |
            docker build -t << parameters.dockerName >>:<< parameters.dockerTag >> .
          working_directory: base/<< parameters.dockerTag >>

      - run:
          name: test built image
          command: |
            docker build -t cypress/test -\\<<EOF
            FROM << parameters.dockerName >>:<< parameters.dockerTag >>
            RUN echo "current user: $(whoami)"
            ENV CI=1
            RUN npm init --yes
            RUN npm install --save-dev cypress
            RUN ./node_modules/.bin/cypress verify
            RUN npx @bahmutov/cly init
            RUN ./node_modules/.bin/cypress run
            EOF

      - run:
          name: Check if can push to Docker Hub
          command: |
            if [[ "$CIRCLE_BRANCH" != "master" ]]; then
              echo "Not master branch, will skip pushing newly built Docker image"
              circleci-agent step halt
            else
              echo "On master branch, pushing Docker image to hub"
            fi

      - run:
          name: Pushing new image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push << parameters.dockerName >>:<< parameters.dockerTag >>

workflows:
  version: 2
  build-base-images:
    jobs:
`

const writeConfigFile = (images) => {
  const yml = images.map(imageAndTag => {
    // important to have indent
    const job = '      - build-base-image:\n' +
      `          name: "${imageAndTag.tag}"\n` +
      `          dockerTag: "${imageAndTag.tag}"\n` +
      '          <<: *buildFilters\n'
    return job
  })
  const text = preamble + yml.join('')
  fs.writeFileSync('circle.yml', text, 'utf8')
  console.log('generated circle.yml')
}

(async () => {
	const paths = await globby('base/*', {onlyDirectories: true});

  console.log(paths);
  const namePlusTag = paths.map(path => {
    const [name, tag] = path.split('/')
    return {
      name,
      tag
    }
  })
  console.log(namePlusTag)
  writeConfigFile(namePlusTag)
})();
